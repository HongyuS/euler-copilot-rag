INTENT_DETECT_PROMPT_TEMPLATE: "\n<instructions>\n          <instruction>\n      \
  \      根据历史对话，推断用户的实际意图并补全用户的提问内容。\n            用户的提问内容将在<user_question>中给出，历史对话将在<history>中给出。\n\
  \            要求：\n              1. 参考下面给出的样例，请直接输出补全后的提问内容；输出不要包含XML标签，不要包含任何解释说明；\n\
  \              2. 若用户当前提问内容与对话上文不相关，或你认为用户的提问内容已足够完整，请直接输出用户的提问内容。\n           \
  \   3. 补全内容必须精准、恰当，不要编造任何内容。\n          </instruction>\n\n          <example>\n\
  \            <history>openEuler是什么</history>           \n            <question>有什么特点</question>\n\
  \            <output>openEuler有什么特点？</output>\n          </example>\n          \n\
  </instructions>\n        <history>\n            {history}\n        </history>\n\
  \        <question>\n            {question}\n        </question>\n"
LLM_PROMPT_TEMPLATE: "\n        <instructions>\n            你是EulerCopilot,openEuler社区的智能助手。请结合给出的背景信息,\
  \ 回答用户的提问。\n            上下文背景信息将在<bac_info>中给出。\n            注意：输出不要包含任何XML标签，不要编造任何信息。若你认为用户提问与背景信息无关，请忽略背景信息直接作答。\n\
  \        </instructions>\n\n        <bac_info>\n            {bac_info}\n       \
  \ </bac_info>\n"
OCR_ENHANCED_PROMPT: '你是一个图片ocr内容总结专家，你的任务是根据我提供的上下文、相邻图片组描述、当前图片上一次的ocr内容总结、当前图片部分ocr的结果（包含文字和文字的相对坐标）给出图片描述.

  注意：

  #01 必须使用大于200字小于500字详细详细描述这个图片的内容，可以详细列出数据.

  #02 如果这个图是流程图，请按照流程图顺序描述内容。

  #03 如果这张图是表格，请用markdown形式输出表格内容 .

  #04 如果这张图是架构图，请按照架构图层次结构描述内容。

  #05 总结的图片描述必须包含图片中的主要信息，不能只描述图片位置。

  #6 图片识别结果中相邻的文字可能是同一段落的内容，请合并后总结

  #7 文字可能存在错位，请修正顺序后进行总结

  #8 请仅输出图片的总结即可，不要输出其他内容

  #9 不要输出坐标等信息，输出每个部分相对位置的描述即可

  上下文:{image_related_text}

  当前图片上一部分的ocr内容总结:{pre_part_description}

  当前图片部分ocr的结果：{part}'
QA_TO_STATEMENTS_PROMPT: '你是一个文本分解专家，你的任务是根据我给出的问题和答案，将答案提取为多个陈诉，陈诉使用列表形式返回

  注意：
  #01 陈诉必须来源于答案中的重点内容
  #02 陈诉按相对顺序排列
  #03 输出的单个陈诉长度不超过50个字
  #04 输出的陈诉总数不超过20个
  #05 请仅输出陈诉列表，不要输出其他内容
  例子：

  输入：
  问题：openEuler是什么操作系统？
  答案：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
  输出：
  [
    \"openEuler是一个开源的操作系统\",
    \"openEuler旨在为云计算和边缘计算提供支持\",
    \"openEuler具有高性能、高安全性和高可靠性等特点\"
  ]

  下面是给出的问题和答案：
  问题：{question}
  答案：{answer}
'
ANSWER_TO_ANSWER_PROMPT: '你是一个文本分析专家，你的任务对比两个文本之间的相似度，并输出一个0-100之间的分数且保留两位小数：
注意：
#01 请根据文本在语义、语序和关键字上的相似度进行打分
#02 请仅输出分数，不要输出其他内容
例子：
输入1：
  文本1：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
  文本2：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
  输出1：100.00
输入2：
  文本1：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
  文本2：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能和高安全性等特点。
  输出2：90.00
输入3：
  文本1：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
  文本2：白马非马
  输出3：00.00
下面是给出的文本：
  文本1：{text_1}
  文本2：{text_2}
'
CONTENT_TO_STATEMENTS_PROMPT: '你是一个文本分解专家，你的任务是根据我给出的文本，将文本提取为多个陈诉，陈诉使用列表形式返回

  注意：
  #01 陈诉必须来源于文本中的重点内容
  #02 陈诉按相对顺序排列
  #03 输出的单个陈诉长度不少于20个字，不超过50个字
  #04 输出的陈诉总数不超过3个
  #05 请仅输出陈诉列表，不要输出其他内容
  例子：

  输入：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
  输出：
  [
    \"openEuler是一个开源的操作系统\",
    \"openEuler旨在为云计算和边缘计算提供支持\",
    \"openEuler具有高性能、高安全性和高可靠性等特点\"
  ]

  下面是给出的文本：
  {content}
  '
STATEMENTS_TO_FRAGMENT_PROMPT: '你是一个文本专家，你的任务是根据给出的陈诉是否与片段强相关
  注意：
  #01 如果陈诉与片段强相关或者来自于片段，请输出YES
  #02 如果陈诉中的内容与片段无关，请输出NO
  #03 请仅输出YES或NO，不要输出其他内容
  例子：
  输入1：
  
    陈诉：openEuler是一个开源的操作系统。
    片段：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
  输出1：YES

  输入2：
    陈诉：白马非马
    片段：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
  输出2：NO

  下面是给出的陈诉和片段：
  陈诉：{statement}
  片段：{fragment}
  '
STATEMENTS_TO_QUESTION_PROMPT: '你是一个文本分析专家，你的任务是根据给出的陈诉和问题判断，陈诉是否与问题相关
  注意：
  #01 如果陈诉是否与问题相关，请输出YES
  #02 如果陈诉与问题不相关，请输出NO
  #03 请仅输出YES或NO，不要输出其他内容
  #04 陈诉与问题相关是指，陈诉中的内容可以回答问题或者与问题在内容上有交际
  例子：
  输入1：
    陈诉：openEuler是一个开源的操作系统。
    问题：openEuler是什么操作系统？
  输出1：YES

  输入2：
    陈诉：白马非马
    问题：openEuler是什么操作系统？
  输出2：NO

  下面是给出的陈诉和问题：
  陈诉：{statement}
  问题：{question}
  '
GENREATE_QUESTION_FROM_CONTENT_PROMPT: '你是一个文本分析专家，你的任务是根据给出的文本生成{k}个问题并用列表返回
  注意：
  #01 问题必须来源于文本中的内容
  #02 单个问题长度不超过50个字
  #03 不要输出重复的问题
  #04 请仅输出问题列表，不要输出其他内容
  例子：
  输入：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
  输出：
  [\"openEuler是什么操作系统？\",\"openEuler旨在为哪个领域提供支持？\",\"openEuler具有哪些特点？\",\"openEuler的安全性如何？\",\"openEuler的可靠性如何？\"]
  下面是给出的文本：
  {content}
'
GENERATE_ANSWER_FROM_QUESTION_AND_CONTENT_PROMPT: '你是一个文本分析专家，你的任务是根据给出的问题和文本
  生成答案
  注意：
  #01 答案必须来源于文本中的内容
  #02 答案长度不少于50字且不超过500个字
  #03 请仅输出答案，不要输出其他内容
  例子：
  输入1：
    问题：openEuler是什么操作系统？
    文本：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
  输出1：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。

  输入2：
    问题：openEuler的安全性如何？
    文本：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
  输出2：openEuler具有高安全性。

  下面是给出的问题和文本：
  问题：{question}
  文本：{content}
'
CAL_QA_SCORE_PROMPT: '你是一个文本分析专家，你的任务是给出的问题 答案 片段 判断由片段生成的问题和答案的分数，输出一个0-100之间的数，保留两位小数
请根据下面规则评估：
问题评估
相关性：问题是否与给定片段的主题紧密相关，是否准确地基于片段内容提出，有无偏离或曲解片段的核心信息。
合理性：问题的表述是否清晰、逻辑连贯，是否符合正常的语言表达和思维习惯，不存在语义模糊、歧义或自相矛盾的情况。
多样性：如果有多个问题，问题之间的角度和类型是否具有一定的多样性，避免过于单一或重复，能否从不同方面挖掘片段的内容。
难度：问题的难度是否适中，既不过于简单，使答案可以直接从片段中照搬，也不过于困难，让回答者难以从片段中找到线索或依据。
答案评估
准确性：答案是否准确无误地回答了问题，与片段中的信息是否一致，有无错误或遗漏关键要点。
完整性：答案是否完整，涵盖了问题所涉及的各个方面，对于需要详细阐述的问题，是否提供了足够的细节和解释。
简洁性：在保证回答完整准确的前提下，答案是否简洁明了，避免冗长、啰嗦的表述，能否以简洁的语言传达关键信息。
连贯性：答案的逻辑是否清晰，各部分内容之间的衔接是否自然流畅，有无跳跃或混乱的情况。
整体评估
一致性：问题和答案之间是否相互匹配，答案是否是针对所提出的问题进行的回答，两者在内容和逻辑上是否保持一致。
融合性：答案是否能够很好地融合片段中的信息，不仅仅是简单的摘抄，而是经过整合和提炼，以合理的方式呈现出来。
创新性：在某些情况下，评估答案是否具有一定的创新性或独特见解，是否能够在片段信息的基础上进行适当的拓展或深入思考。

注意：
#01 请仅输出分数，不要输出其他内容

例子：
输入1：
  问题：openEuler是什么操作系统？
  答案：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
  片段：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
  输出1：100.00

下面是给出的问题、答案和片段：
  问题：{question}
  答案：{answer}
  片段：{fragment}
'
CONTENT_TO_ABSTRACT_PROMPT: '你是一个文本摘要专家，你的任务是根据给出的文本和摘要生成一个新的摘要
  注意：
  #01 请结合文本和摘要中最重要的内容生成新的摘要
  #02 新的摘要的长度必须大于200字小于500字
  #03 请仅输出新的摘要，不要输出其他内容
  例子：
  输入1：
    文本：openEuler具有高性能、高安全性和高可靠性等特点。
    摘要：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。
  输出1：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。openEuler具有高性能、高安全性和高可靠性等特点。

  下面是给出的文本和摘要：
  文本：{content}
  摘要：{abstract}
'

CONTENT_TO_TITLE_PROMPT: '你是一个标题提取专家，你的任务是根据给出的文本生成一个标题
  注意：
  #01 标题必须来源于文本中的内容
  #02 标题长度不超过20个字
  #03 请仅输出标题，不要输出其他内容
  #04 如果给出的文本不够生成标题，请输出“无法生成标题”
  例子：
  输入：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
  输出：openEuler操作系统概述
  下面是给出的文本：
  {content}
'

ACC_RESULT_ANALYSIS_PROMPT: '你是一个文本分析专家，你的任务根据给出的 测试使用的大模型 embdding模型 测试相关文档的解析方法和分块大小 单条测试结果分析rag算法匹配到的片段分析当前知识库问答准确率提升的方法
测试结果包含下面内容：
问题:测试使用的问题
标准答案：测试使用的标准答案
生成的答案:测试结果中大模型的答案
原始片段:测试结果中原始片段
检索的片段：测试结果中rag算法检索到的片段
精确率：评估生成的答案与问题之间的语义相似程度，这个评分月越低说明使用的大模型遵从度越低，其次是rag检索到的片段缺少上下文，不足以支撑问题的回答
召回率度：评估生成的答案与标准回答之间的语义相似程度，这个评分月越低说明使用的大模型遵从度越低
忠实值：评估生成的答案中的内容是否来自于检索到的片段，这个评分越低说明rag检索算法和embedding模型的召回率越低，检索到的片段不足以回答问题，其次是文本分块大小不合理
可解释性：评估生成的答案是否用于回答问题，这个评分越低说明rag检索算法和embedding模型的召回率越低，检索到的片段不足以回答问题，其次是使用的大模型遵从度越低

注意：
#01 请根据测试结果中的内容分析当前知识库问答准确率提升的方法
#02 请结合召回率、精确度、忠实值和可解释性四个指标进行分析
#03 分析结果长度不超过500字
#04 请仅输出分析结果，不要输出其他内容
例子：
输入：
模型名称：qwen2.5-32b
embedding模型：bge-m3
文本的分块大小：512
使用解析的rag算法：向量化检索
问题：openEuler是什么操作系统？
标准答案：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
生成的答案：openEuler是一个开源的操作系统，旨在为云计算和边缘计算提供支持。它具有高性能、高安全性和高可靠性等特点。
原始片段：openEuler 是由开放原子开源基金会孵化及运营的开源操作系统，以构建面向数字基础设施的开源操作系统生态为使命，致力于为云计算、边缘计算等前沿领域提供坚实的底层支持。在云计算场景中，openEuler 能够充分优化资源调度与分配机制，通过轻量化的内核设计和高效的虚拟化技术，显著提升云服务的响应速度与吞吐量；在边缘计算领域，它凭借出色的低资源消耗特性与实时处理能力，保障了边缘节点在复杂环境下数据处理的及时性与准确性。
openEuler 具备一系列卓越特性：在性能方面，其自主研发的智能调度算法能够动态适配不同负载场景，结合对硬件资源的深度优化利用，大幅提升系统运行效率；安全性上，通过内置的多层次安全防护体系，包括强制访问控制、漏洞扫描与修复机制，为系统数据与应用程序构筑起坚实的安全防线；可靠性层面，基于分布式存储、故障自动检测与快速恢复技术，确保系统在面对网络波动、硬件故障等突发状况时，依然能够稳定运行，最大限度降低服务中断风险。这些特性使 openEuler 成为推动数字经济高质量发展的重要技术基石，助力企业与开发者在数字化转型进程中抢占先机。
检索的片段：openEuler 作为开源操作系统领域的先锋力量，深度融合了社区开发者的智慧结晶，不断迭代升级以适应快速变化的技术环境。在微服务架构盛行的当下，openEuler 通过对容器化技术的深度优化，支持 Kubernetes 等主流编排工具，让应用部署与管理变得更加便捷高效，极大提升了企业的业务部署灵活性。同时，它积极拥抱 AI 时代，通过对机器学习框架的适配与优化，为 AI 模型训练和推理提供强大的算力支撑，有效降低了 AI 应用的开发与运行成本。
在生态建设方面，openEuler 拥有庞大且活跃的开源社区，汇聚了来自全球的技术爱好者与行业专家，形成了从内核开发、驱动适配到应用优化的完整生态链。社区定期举办技术交流与开发者大会，推动知识共享与技术创新，为开发者提供了丰富的学习资源与实践机会。众多硬件厂商和软件企业纷纷加入 openEuler 生态，推出基于该系统的解决方案和产品，涵盖金融、电信、能源等关键行业，以实际应用场景验证并反哺 openEuler 的技术发展，形成了良性循环的创新生态，让 openEuler 不仅是一个操作系统，更成为推动产业协同发展的强大引擎 。

召回率：95.00
精确度：99.00
忠实值：90.00
可解释性：85.00

输出：
根据测试结果中的内容，当前知识库问答准确率提升的方法可以从以下几个方面进行分析：
召回率：目前召回率为 95.00，有提升空间。优化向量化检索算法，进一步挖掘原始片段中与问题相关但未被检索到的信息，如 openEuler 生态中一些具体实践案例等。调整 embedding 模型 bge-m3，使其能更全面准确地捕捉语义，扩大检索范围，提高召回率，使生成答案更接近标准答案。
精确度：精确度达 99.00，已较高。但可进一步优化，对检索到的片段进行更深入的语义分析，结合大模型 qwen2.5-32b 的特点，精准匹配问题语义，避免细微语义偏差，例如更精确阐述 openEuler 在云计算和边缘计算中高性能等特性的具体表现。
忠实值：忠实值为 90.00，说明部分答案内容未完全源于检索片段。优化 rag 检索算法，提高 embedding 模型召回率，调整文本分块大小为 512 可能存在不合理，需根据内容重新评估，确保检索片段包含足够上下文以支撑答案，使生成答案内容均来自检索片段，如关于 openEuler 生态建设中相关技术细节应从检索片段获取。
可解释性：可解释性为 85.00，相对较低。提升大模型 qwen2.5-32b 的遵从度，优化 rag 检索算法和 embedding 模型 bge-m3 的召回率，使检索片段能更好支撑生成答案，保证答案能清晰回答问题，例如在回答 openEuler 相关问题时，使答案逻辑更清晰、针对性更强，提高整体可解释性。


下面是测试结果中的内容：
使用的大模型：{model_name}
embedding模型：{embedding_model}
文本的分块大小：{chunk_size}
使用解析的rag算法：{rag_algorithm}
问题：{question}
标准答案：{standard_answer}
生成的答案：{generated_answer}
原始片段：{original_fragment}
检索的片段：{retrieved_fragment}
召回率：{recall}
精确度：{precision}
忠实值：{faithfulness}
可解释性：{relevance}
'
ACC_ANALYSIS_RESULT_MERGE_PROMPT: '你是一个文本分析专家，你的任务融合两条分析结果输出一份新的分析结果
注意：
#01 请根据两条分析结果中的内容融合出一条新的分析结果
#02 请结合召回率、精确度、忠实值和可解释性四个指标进行分析
#03 新的分析结果长度不超过500字
#04 请仅输出新的分析结果，不要输出其他内容
例子：
输入1：
分析结果1：

召回率：目前召回率为 95.00，有提升空间。优化向量化检索算法，进一步挖掘原始片段中与问题相关但未被检索到的信息，如 openEuler 生态中一些具体实践案例等。调整 embedding 模型 bge-m3，使其能更全面准确地捕捉语义，扩大检索范围，提高召回率，使生成答案更接近标准答案。
精确度：精确度达 99.00，已较高。但可进一步优化，对检索到的片段进行更深入的语义分析，结合大模型 qwen2.5-32b 的特点，精准匹配问题语义，避免细微语义偏差，例如更精确阐述 openEuler 在云计算和边缘计算中高性能等特性的具体表现。
忠实值：忠实值为 90.00，说明部分答案内容未完全源于检索片段。优化 rag 检索算法，提高 embedding 模型召回率，调整文本分块大小为 512 可能存在不合理，需根据内容重新评估，确保检索片段包含足够上下文以支撑答案，使生成答案内容均来自检索片段，如关于 openEuler 生态建设中相关技术细节应从检索片段获取。
可解释性：可解释性为 85.00，相对较低。提升大模型 qwen2.5-32b 的遵从度，优化 rag 检索算法和 embedding 模型 bge-m3 的召回率，使检索片段能更好支撑生成答案，保证答案能清晰回答问题，例如在回答 openEuler 相关问题时，使答案逻辑更清晰、针对性更强，提高整体可解释性。

分析结果2：

从召回率来看，目前为 95.00，可进一步优化 rag 检索算法和 embedding 模型，以提高生成答案与标准回答之间的语义相似程度，接近或达到更高的召回率，例如可以持续优化算法来更好地匹配相关片段。
从精确度来看，为 99.00，接近满分，说明生成的答案与问题语义相似程度较高，但仍可进一步提升，可通过完善 embedding 模型来更好地理解问题语义，优化检索到的片段的上下文完整性，减少因上下文不足导致的精确度波动。
对于忠实值，目前为 90.00，说明生成的答案中部分内容未完全来自检索到的片段。可优化 rag 检索算法，提高其召回率，同时合理调整文本分块大小，确保检索到的片段能充分回答问题，从而提高忠实值。
关于可解释性，当前为 85.00，说明生成的答案在用于回答问题方面有一定提升空间。一方面可以优化使用的大模型，提高其遵从度，使其生成的答案更准确地回答问题；另一方面，继续优化 rag 检索算法和 embedding 模型的召回率，保证检索到的片段能全面支撑问题的回答，提高可解释性。

输出：
召回率：目前召回率为 95.00，有提升空间。优化向量化检索算法，进一步挖掘原始片段中与问题相关但未被检索到的信息，如 openEuler 生态中一些具体实践案例等。调整 embedding 模型 bge-m3，使其能更全面准确地捕捉语义，扩大检索范围，提高召回率，使生成答案更接近标准答案。
精确度：精确度达 99.00，已较高。但可进一步优化，对检索到的片段进行更深入的语义分析，结合大模型 qwen2.5-32b 的特点，精准匹配问题语义，避免细微语义偏差，例如更精确阐述 openEuler 在云计算和边缘计算中高性能等特性的具体表现。
忠实值：忠实值为 90.00，说明部分答案内容未完全源于检索片段。优化 rag 检索算法，提高 embedding 模型召回率，调整文本分块大小为 512 可能存在不合理，需根据内容重新评估，确保检索片段包含足够上下文以支撑答案，使生成答案内容均来自检索片段，如关于 openEuler 生态建设中相关技术细节应从检索片段获取。
可解释性：可解释性为 85.00，相对较低。提升大模型 qwen2.5-32b 的遵从度，优化 rag 检索算法和 embedding 模型 bge-m3 的召回率，使检索片段能更好支撑生成答案，保证答案能清晰回答问题，例如在回答 openEuler 相关问题时，使答案逻辑更清晰、针对性更强，提高整体可解释性。

下面两条分析结果：
分析结果1：{analysis_result_1}
分析结果2：{analysis_result_2}
'
CHUNK_QUERY_MATCH_PROMPT: '你是一个文本分析专家，你的任务是根据给出的片段和问题判断，片段是否与问题相关
  注意：
  #01 如果片段与问题相关，请输出YES
  #02 如果片段与问题不相关，请输出NO
  #03 请仅输出YES或NO，不要输出其他内容
  例子：
  输入1：
    片段：openEuler是一个开源的操作系统。
    问题：openEuler是什么操作系统？
  输出1：YES

  输入2：
    片段：白马非马
    问题：openEuler是什么操作系统？
  输出2：NO

  下面是给出的片段和问题：
  片段：{chunk}
  问题：{question}
  '
  QUERY_EXTEND_PROMPT: '你是一个问题扩写专家，你的任务是根据给出的问题扩写{k}个问题
  注意：
  #01 扩写的问题的内容必须来源于原问题中的内容
  #02 扩写的问题长度不超过50个字
  #03 可以通过近义词替换 问题内词序交换 修改英文大小写等方式来改写问题
  #04 请仅输出扩写的问题列表，不要输出其他内容
  例子：
  输入：openEuler是什么操作系统？
  输出：
  [
    "openEuler是一个什么样的操作系统？",
    "openEuler操作系统的特点是什么？",
    "openEuler操作系统有哪些功能？",
    "openEuler操作系统的优势是什么？"
  ]
  下面是给出的问题：
  {question}
  '